server:
  port: 31002
spring:
    application:
      name: edu-online-manage-course #服务名称
    datasource:
      druid:
        url: jdbc:mysql://localhost:3306/edu_course?characterEncoding=utf-8
        username: root
        password: 305114
        driverClassName: com.mysql.jdbc.Driver
        initialSize: 5  #初始建立连接数量
        minIdle: 5  #最小连接数量
        maxActive: 20 #最大连接数量
        maxWait: 10000  #获取连接最大等待时间，毫秒
        testOnBorrow: true #申请连接时检测连接是否有效
        testOnReturn: false #归还连接时检测连接是否有效
        timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
        minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
pagehelper:
  helper-dialect: mysql #指定数据库类型
mybatis:
  typeAliasesPackage: edu.online.Entity
  mapperLocations: classpath:mapper/*.xml  #指定mapper.xml文件的位置（自定义路径）

eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
      defaultZone: http://localhost:10001/eureka/
  instance:
    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port} #指定实例id

ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间

course-publish: #对于课程详情页面来说 下面信息是固定的
  siteId: 5a751fab6abb5044e0d19ea1 #门户主站
  templateId: 5e6348001ddb9b2cc0bf6256 #模板id
  previewUrl: http://www.eduonline.com/cms/page/pagePreview/ #拼接课程id 随课程id而变
  pageWebPath: /course/detail/
  pagePhysicalPath: F:/xc-ui-pc-static-portal/static/course/detail/
  dataUrlPre: http://localhost:31002/course/info/view/  #拼接课程id 随课程id而变